/*Given an array arr[] of N non-negative integers representing height of blocks at index i as Ai where the width of each block is 1. Compute how much water can be trapped in between blocks after raining.
Structure is like below:
We can trap 2 units of water in the middle gap.

Input:
The first line of input contains an integer T denoting the number of test cases. The description of T test cases follows. Each test case contains an integer N denoting the size of the array, followed by N space separated numbers to be stored in array.

Output:
Output the total unit of water trapped in between the blocks.*/

#include <iostream>
using namespace std;

int main()
{
	int t,i,j,n,ans;
	cin>>t;
	for(i=0;i<t;i++)
	{
	  cin>>n;
	  int a[n];
	  for(j=0;j<n;j++)
	  cin>>a[j];
	  int left[n]={0};
	  int right[n]={0};
	  
	  left[0]=a[0];
	  for(j=1;j<n;j++)
	  left[j]=max(left[j-1],a[j]);
	  
	  right[n-1]=a[n-1];
	  for(j=n-2;j>=0;j--)
	  right[j]=max(a[j],right[j+1]);
	  
	  ans=0;
	  for(j=0;j<n;j++)
	  ans=ans+min(left[j],right[j])-a[j];
	  cout<<ans<<endl;
	}
	return 0;
}
